Данный код перебирает массив и проверяет какой из элементов массива больше 13.
Задержка в 3000 мс будет работать так, что все значения будут выведены одновременно через 3 секунды 
после начала выполнения, и функция будет ссылаться на переменную i, 
которая к этому моменту будет равна arr.length - 1.
Если элемент массива меньше 13, то код выводит  Bad: элемент массива,
если элемент массива больше 13, то код выводит  Good: элемент массива.
Bad: 10
Bad: 12
Good: 15
Good: 21

Модификации кода

Изменить задержку для каждого элемента:
Мы можем установить задержку, пропорциональную индексу i, чтобы вывод значений происходил поочередно.

const arr = [10, 12, 15, 21];
for (let i = 0; i < arr.length; i++) {
    setTimeout(function(){
        console.log(arr[i] > 13 ? `Good: ${arr[i]}` : `Bad: ${arr[i]}`);
    }, i * 3000); // увеличиваем задержку для каждого элемента
}

С данным подходом результаты будут выводиться по одному каждые 3 секунды, сохраняя порядок.


Фильтрация значений перед выводом:
Чтобы вывести только «Bad» или «Good» в нужной последовательности, можно сначала отфильтровать значения, а затем вывести их.

const arr = [10, 12, 15, 21];
const result = arr.map(num => num > 13 ? `Good: ${num}` : `Bad: ${num}`);

for (let i = 0; i < result.length; i++) {
    setTimeout(function(){
        console.log(result[i]);
    }, 3000); // задержка равномерная
}

Здесь мы предварительно формируем массив result, который обрабатывает значения и сразу дает желаемый вывод.

